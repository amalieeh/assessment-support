{
  "examYear": 2019,
  "taskDescriptions": [
    "1. Hva er responsiv web design? <br> 2. Nevn forskjellige teknikker som brukes for å implementere responsiv webdesign.",
    "Hvordan implementeres interaktivitet på 'figurnivå' i henholdsvis SVG/DOM og med Canvas API'et? <br> Med interaktivitet på figurnivå menes at bruker skal kunne klikke på enkeltelementer og utføre handliger på disse (f.eks. flytte en sirkel, endre farge på et rektangel etc).",
    "REST og GraphQL er to forskjellige løsninger for klient-server kommunikasjon i web- applikasjoner. Beskriv og diskuter disse kort (legg vekt på å sammenligne).",
    "Forklar kort hva følgende former for testing er (og hva de brukes til å teste). <ul><li>Cross-browser testing</li><li>Enhetstesting</li><li>Snapshot-testing</li><li>End-to-end testing</ul>",
    "Hva er de to viktige forskjellene mellom en variabel som er deklarert med const i Javascript ES6 og en variabel som er deklarert med var (pre ES6)?",
    "Forklar hva funksjonen groupBy gjør og gi et eksempel på bruk gitt cars-variabelen? Vi er ute etter overordnet funksjonalitet og bruk -- og ikke detaljene i kallet til reduce.",
    "Du skal være med å utvikle en søkeapplikasjon for en samling av vitenskapelige artikler. Det skal være mulig å søke på forfatter, emne, tidsskrift, år, tittelord og databasen inneholder omtrent 1 million artikler. Det skal være mulig å filtrere og sortere resultatsettet som returneres fra et søk. <p> Lag en punktliste med opp til 5 gode råd for design og arkitekturen til systemet og argumenter etterpå kort for hvorfor disse er viktige.",
    "Hva er hensikten og fordelene med global state management i React applikasjoner?"
  ],
  "markerGuides": [
    "Websider som har dynamisk design og kan tilpasse layout mm til forskjellige enheter/skjermstørrelser <br> Teknikker: <ul><li>Viewport (i meta-taggen) for å definere størrelse på det synlige vinduet</li> <li>CSS mediaqueries for bertinget stiling av</li> <li>Velge bilder av forskjellig størrelse tilpasset enheten eller dynamisk størrelse på bilder</li> <li>Bruk av dynamisk layout med css grid eller flexbox</li> <li>• Eller bruke rammeverk som støtter responsiv design (og kanskje er basert på det over...)</li></ul> <br> PS Siden oppgaveteksten sier «nevn forskjellige» legger vi ikke vesentlig vekt på forklaringer.",
    "I SVG kan vi knytte event handlers til de grafiske objektene og sette og endre attributter på objektene. Canvas API’ert er er mer lavnivå API for grafikk hvor vi i utgangspunktet bare kan utføre tegneoperasjoner. Skal vi implementere interaktiv grafikk med Canvas må vi selv programmere opptegning av grafiske objekter og en click-detection mekanisme for å finne ut hvilket grafisk objekt bruker interagerer med.",
    "I REST defineres ett eller flere endepunkter for å lese, skrive eller endre på «entiteter/ressurser» vha URI og HTTP requests. I REST er det definert hvilke data som skal returneres for en entitet/ressurs. Benytter du REST kan du dra fordel av caching-mekanismen som default støttes av alle weblesere. En mulig ulempe med REST er at ved mer kompleks informasjon (mange endepunkter), må du gjøre mange kall for å hente data du trenger og du henter kanskje mer data enn du trenger (overfetching). <br> <p>GraphQL er et basert på at du sender en spørring til en server hvor du definerer både søk og hvilke data som skal returneres (eller oppdateringer). Fordelene er at alle data kan hentes i en request og at du unngår lasting av for mye data. I tillegg er det det typesystem som gjør det mulig å validere. Ulemper er mangel på implisitt caching i HTTP-lage og at det kun støtter JSON-data. Kobling mellom tjener og klient kan også være noe tettere i ved bruk av GraphQL siden det brukes skjema som definerer struktur og typer, men dette kan også vurderes som en fordel siden det muliggjør validering. \n Snapshot-testing brukes for å teste at brukergrensnittet ikke har endret seg uventet. Typisk tar du et snapshot av applikasjonens brukergrensesnitt og sammenligner med et referanse- snapshot som er lagret.",
    "Cross-browser testing er å forsikre seg om at en webside eller webapplikasjon fungerer korrekt på et akseptabelt utvalg av (de mest brukte) webleserne. <p> Enhetstesting er å teste individuelle enheter (funksjoner, komponenter, klasser etc.). Hensikten er å teste at alle enheter oppfører seg som planlagt. <p> Snapshot-testing brukes for å teste at brukergrensnittet ikke har endret seg uventet. Typisk tar du et snapshot av applikasjonens brukergrensesnitt og sammenligner med et referanse- snapshot som er lagret. <p> I end-to-end testing sjekker vi om flyten i en applikasjon oppfører seg korrekt fra start til slutt. Hensikten med end-to-end testing er å identifisere at et system som helhet fungerer som planlagt.",
    "<ul><li>Har blokk-scope tilsvarende som for let</li><li>Er konstanter (som riktignok er litt misvisende å si siden de er konstante referanser)</li><li>(I tillegg må de også tilordnes en verdi ved deklarering)</li></ul>",
    "Funksjonen lar deg gruppere objekter basert på en navngitt property/key. Dette er implementert som en funksjon som tar key som input og returnerer en funksjon som tar en array av objekter som input. Førstnevnte brukes for å «sette opp» grupperingsfunksjonen. Sistenevnte brukes for å kjøre selve grupperingen.",
    "<ul><li>Med data av denne størrelsen får du ofte store resultatsett ved søk og da må du ha en form dynamisk lasting av resultatet basert på sidevisning eller lasting etter hvert som du scroller nedover.</li> <li> Brukerdefinert sortering og filtrering av resultatsettet må gjøres på serversiden siden det skal utføres på hele resultatsettet. I praksis kan det godt implementeres som et nytt søk.</li><li> Søkeformulering bør utformes slik at det oppleves responsivt og ikke gir unødvendige søk på serversiden. Typisk en dårlig ide å søke hver gang en bruker taster en ny bokstav og en kan bruke mekanismer som trigger søk etter en periode med inaktivitet, eller du kan basere deg på at bruker trykker enter eller en søkeknapp.</li><li>Kontroller utvalget av filter og brukers mulighet for å velge filtrering slik at du ikke kan filtrere deg til et tomt resultatsett.</li><li>Lag en side som oppleves som intuitiv og baser deg på etablerte konvensjoner...</li></ul> ",
    "React sin innebygde mekanisme for data/tilstand er basert på properties som er data du sender inn til en komponent når den opprettes og state som er komponentens tilstandsdata som kan endres i kjøretid. I tillegg har du mulighet til å sende data oppover i komponenthierarkiet med ved å sende call-back funksjoner som gjør at barn kan endre state i foreldre. Ved komplekse applikasjoner med mange komponenter hvor eksempelvis samme data skal brukes flere steder eller data som skal sendes på tvers av hierarkiet, blir dette fort unødvendig komplisert kode med mulighet for mange feil. Da er det bedre å benytte seg av global state hvor alle data lagres ett sted og hvor en setter opp automatisk oppdatering av berørte komponenter når data endres. Løsninger som anvendes til dette er eksempelvis Redux, Mobx – og Apollo gir deg også mulighet for global state av klient data."
  ]
}
